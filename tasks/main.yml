---
# tasks file for aws environment
#- name: "create ec2 key"
#  amazon.aws.ec2_key:
#    name: "{{ ec2_key_name }}"
#    region: "{{ region }}"
#    state: present
#  register: key_pair

#- debug:
#    msg: "{{ key_pair }}"

- name: "create VPC"
  amazon.aws.ec2_vpc_net:
    name: "{{ vpc_name }}"
    region: "{{ region }}"
    cidr_block: "{{ vpc_cidr }}"
    state: present
  register: vpc

- name: "create public subnet"
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ pub_cidr }}"
    region: "{{ region }}"
    az: "{{ az }}"
    tags:
      Name: "{{ pub_sub_name }}"
    wait: yes
    state: "present"
  register: public_subnet

- name: "create internet gateway"
  community.aws.ec2_vpc_igw:
    region: "{{ region }}"
    vpc_id: "{{ vpc.vpc.id }}"
    tags:
      Name: "{{ igw_name }}"
    state: "present"
  register: igw

- name: "create public route table"
  community.aws.ec2_vpc_route_table:
    region: "{{ region }}"
    vpc_id: "{{ vpc.vpc.id }}"
    subnets:
      - "{{ public_subnet.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
    tags:
      Name: "{{ pub_sub_rt_name }}"
    state: "present"
  register: public_route_table

- name: "create security group"
  amazon.aws.ec2_group:
    region: "{{ region }}"
    name: "ansible_security_group"
    vpc_id: "{{ vpc.vpc.id }}"
    description: "sg for public ec2"
    rules:
      - proto: "tcp"
        ports: "{{ pub_open_tcp_ports }}"
        cidr_ip: "{{ local_addr }}"
    tags:
      Name: "ansible_public_ec2_sg"
    state: "present"
  register: sg
   
- name: "create public ec2"
  amazon.aws.ec2:
    region: "{{ region }}"
    vpc_subnet_id: "{{ public_subnet.subnet.id }}"
    image: "{{ pub_ec2_image }}"
    instance_type: "{{ pub_ec2_type }}"
    instance_tags:
      Name: "{{ pub_ec2_name }}"
    key_name: "{{ ec2_key_name }}"
    group_id: "{{ sg.group_id }}"
    volumes:
      - device_name: "{{ pub_ec2_vol_dev }}"
        volume_size: "{{ pub_ec2_vol_size }}"
        volume_type: "{{ pub_ec2_vol_type }}"
        delete_on_termination: yes
    exact_count: "{{ pub_ec2_count }}"
    count_tag:
      Name: "{{ pub_ec2_name }}"
    monitoring: "{{ pub_ec2_mon }}"
    assign_public_ip: "{{ pub_ec2_pub_ip }}"
  register: ec2

- debug:
    msg: "{{ ec2 }}"

